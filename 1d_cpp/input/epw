//-----------------------------------------------------------------------
// Parallel
//-----------------------------------------------------------------------

NnodesX = 4
NnodesY = 1

//-----------------------------------------------------------------------
// Momentum Grid per species
//-----------------------------------------------------------------------

numsp = 1

l0 = 4
m0 = 4
nump = 64
pmax = 0.25
mass = 1.0
charge = -1.0


//-----------------------------------------------------------------------
// Spatial Grid
//-----------------------------------------------------------------------

numx_glob = 200

xmin = 0.0
xmax = 2.0

//-----------------------------------------------------------------------
// Loop control
//-----------------------------------------------------------------------

clf_dp = 0.01;
n_outsteps = 600;
t_stop = 200.0;

//-----------------------------------------------------------------------
// Various switches
//-----------------------------------------------------------------------

// Collisions
small_dt                            = 0.1
smaller_dt                          = 0.0000125
NB_algorithms                       = 3
collisions                          = false
assume_tridiagonal_flm_collisions   = false

// Vlasov
implicit_B_push                     = false

// Field Solver
implicit_E                          = false

//-----------------------------------------------------------------------
//
// Distribution Function Initialization
//
//-----------------------------------------------------------------------
// Initialize f00 using density and temperature
//-----------------------------------------------------------------------

density_np = 9.1e20
super_gaussian_distribution = 2.0
pth_ref = 0.07							    // Reference thermal velocity

n(x) = cst{0.07} fnc{9.1-4.5*(tanh(0.005*(x+1500))-tanh(0.005*(x-1500)))} cst{1.0}
T(x) = fnc{0.025*0.025} fnc{0.000625*(1+0.01*sin(pi*x/3000))} //6*(exp(-0.0001*(x-1500)^2)+exp(-0.0001*(x+1500)^2)))}

//-----------------------------------------------------------------------
// Option to apply f10(x) = C(x) * (v^3 df00/dv) . Provide C(x)
//-----------------------------------------------------------------------
init_f1 = true
multiplier-f10(x) = fnc{1e-6*sin(pi*x)}


//-----------------------------------------------------------------------
// Boundary type (default periodic)
// 0:periodic, 1:mirror, 2:fixed
//-----------------------------------------------------------------------

bndX = 0

//-----------------------------------------------------------------------
//      External Fields
//-----------------------------------------------------------------------

ext_fields = true

Ex(x) = fnc{1e-12*sin(pi*x)}
Ex(t) = fnc{sin(t/2)*(0.5-0.5*tanh(10000*(t-10)))}

Ey(x) = cst{0.0}
Ey(t) = cst{0.0}

Ez(x) = cst{0.0}
Ez(t) = cst{0.0}

Bx(x) = cst{0.0}
Bx(t) = cst{0.0}

By(x) = cst{0e-3}
By(t) = cst{0.0} {0.5-0.5*tanh(1000000*(t-3.0))}

Bz(x) = cst{0e-3} //fnc{1e-3*sin(pi*x/5000.0)}
Bz(t) = cst{0.0} //fnc{0.5-0.5*tanh(10*(t-.0))}//*exp(1e-6*t)}

//-----------------------------------------------------------------------
//      Hydrodynamic parameters
//-----------------------------------------------------------------------

hydro = false
hydroatomicmass = 100.0
hydrocharge = 5.0

Z(x) = cst{1.0} fnc{(0.81-0.4*(tanh(0.005*(x+1500))-tanh(0.005*(x-1500))))}
ni(x) = fnc{1.0/60.0*(9.1-4.5*(tanh(0.005*(x+1500))-tanh(0.005*(x-1500))))}
Ti(x) = cst{0.0001}
Ux(x) = cst{0.0}

//-----------------------------------------------------------------------
//      Laser profile
//-----------------------------------------------------------------------

inverse_bremsstrahlung = false
lambda_0 = 0.351
I_0 = 3.0e14
I(x) = fnc{exp(-0.0001*(x-1500)^2)}

//-----------------------------------------------------------------------
// Output
//-----------------------------------------------------------------------

o_EHist = false

// Output options
// Fields
o_Ex = true
o_Ey = true
o_Ez = true
o_Bx = true
o_By = true
o_Bz = true

// Scalar Quantities 
o_x1x2 = true       				// Density            
o_Temperature = true 				// Temperature

// Vector Quantities
o_Jx = true
o_Jy = true
o_Jz = true

o_Qx   = true
o_Qy   = true
o_Qz   = true

o_vNx   = true
o_vNy   = true
o_vNz   = true

// Distribution Function
o_p1x1 = false

o_f0x1 = true
o_f10x1 = true
o_f11x1 = true

// Fluid quantities
o_Ux = true
o_Uy = true
o_Uz = true
o_Z  = true
o_ni = true
o_Ti = true

//-----------------------------------------------------------------------
// Restart files
//-----------------------------------------------------------------------
restart_time = 0
n_restarts = 0
